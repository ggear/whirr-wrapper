#!/bin/sh

source "$WHIRR_WRAPPER_HOME"/bin/whirr.env

assertClusterInitialised

$WHIRR_WRAPPER_HOME/bin/whirr-client-clean

if [ "$CLUSTER_TYPE" = "CM" ]; then
  CLIENT_CONFIG_URL="http://"$(grep cmserver "$HOME/.whirr/$CLUSTER_NAME/instances" | cut -d: -f3 | awk '{print $3}')":7180/cmf/services/"
  for ID in {25..1}; do
    if [ $(curl -sI "$CLIENT_CONFIG_URL$ID/client-config" | grep "HTTP/1.1 200 OK\|mapreduce\|hive" | wc -l) -eq 2 ]; then
      cd "$HOME/.whirr/$CLUSTER_NAME"
      curl -sO "$CLIENT_CONFIG_URL$ID/client-config"
      unzip -q "client-config"
      rm -rf "client-config"
      mv -f hadoop-conf/* hive-conf/* ./ > /dev/null 2>&1
      rm -rf hadoop-conf hive-conf
      CLIENT_CONFIG_FOUND=true
    fi 
  done
	if [ ! $CLIENT_CONFIG_FOUND ]; then
	  echo "Unable to download client config"
	fi
else
  if [ ! -f "$HOME/.whirr/$CLUSTER_NAME/hadoop-site.xml" ]; then
    echo "Unable to locate local client config"
  fi  
fi

if [ -f "$HOME/.whirr/$CLUSTER_NAME/hadoop-site.xml" ]; then
  if [ $CLIENT_CONFIG_FOUND ]; then
    rm -rf "$HOME/.whirr/$CLUSTER_NAME/hadoop-site.xml"
    rm -rf "$HOME/.whirr/$CLUSTER_NAME/hadoop-proxy.sh"
  else
    nohup $HOME/.whirr/$CLUSTER_NAME/hadoop-proxy.sh > /dev/null 2>&1 &
  fi  
fi

if [ -d "$HOME/.whirr/$CLUSTER_NAME" ]; then
  cp -r "$HOME/.whirr/$CLUSTER_NAME" "$WHIRR_WRAPPER_HOME"/cfg
fi

if [ "$CLUSTER_SECURITY" = "KERBEROS" ]; then
  KDC=$(grep kerberosserver "$HOME/.whirr/$CLUSTER_NAME/instances" | cut -d: -f3 | awk '{print $3}')
  sed -i -e "s/default_realm = .*/default_realm = CDHCLUSTER.COM/" /etc/krb5.conf
  sed -i -e "s/kdc = .*/kdc = $KDC/" /etc/krb5.conf
  sed -i -e "s/admin_server = .*/admin_server = $KDC/" /etc/krb5.conf
  $WHIRR_WRAPPER_HOME/bin/whirr-kinit hdfs
else
  kdestroy > /dev/null 2>&1
fi

$WHIRR_WRAPPER_HOME/bin/whirr-shell hdfs hadoop fs -mkdir /user/hdfs > /dev/null 2>&1
$WHIRR_WRAPPER_HOME/bin/whirr-shell hdfs hadoop fs -mkdir /user/hive > /dev/null 2>&1
$WHIRR_WRAPPER_HOME/bin/whirr-shell hdfs hadoop fs -chmod 777 /user/hive > /dev/null 2>&1
$WHIRR_WRAPPER_HOME/bin/whirr-shell hdfs hadoop fs -mkdir /user/root > /dev/null 2>&1
$WHIRR_WRAPPER_HOME/bin/whirr-shell hdfs hadoop fs -chown -R root /user/root > /dev/null 2>&1
$WHIRR_WRAPPER_HOME/bin/whirr-shell hdfs hadoop fs -mkdir /user/$CLUSTER_USER > /dev/null 2>&1
$WHIRR_WRAPPER_HOME/bin/whirr-shell hdfs hadoop fs -chown -R $CLUSTER_USER /user/$CLUSTER_USER > /dev/null 2>&1

if [ "$CLUSTER_SECURITY" = "KERBEROS" ]; then
  $WHIRR_WRAPPER_HOME/bin/whirr-kinit $CLUSTER_USER
fi

